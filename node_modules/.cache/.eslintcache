[{"C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\index.js":"1","C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\App.js":"2","C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\pages\\Home.js":"3","C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\pages\\CreatePost.js":"4","C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\pages\\Login.js":"5","C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\firebase-config.js":"6"},{"size":223,"mtime":1703953907706,"results":"7","hashOfConfig":"8"},{"size":1191,"mtime":1703954363450,"results":"9","hashOfConfig":"8"},{"size":1542,"mtime":1703954443764,"results":"10","hashOfConfig":"8"},{"size":1415,"mtime":1703791088012,"results":"11","hashOfConfig":"8"},{"size":708,"mtime":1692523125827,"results":"12","hashOfConfig":"8"},{"size":1096,"mtime":1692518693820,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12p55l5",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},"C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\index.js",[],[],"C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\App.js",["35"],[],"C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\pages\\Home.js",[],[],"C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\pages\\CreatePost.js",["36"],[],"import React, { useState, useEffect} from 'react';\r\nimport {addDoc , collection} from \"firebase/firestore\"; \r\nimport { db, auth} from \"../firebase-config\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction CreatePost({isAuth}) {\r\n\r\n const [title ,setTitle] = useState(\"\");\r\n const [postText, setPostText] = useState(\"\");\r\n\r\n const postsCollectionRef = collection(db,\"posts\");\r\n let navigate = useNavigate();\r\n\r\n const createPost = async () => {\r\n      await addDoc(postsCollectionRef,  {\r\n        title, \r\n        postText, \r\n        author: {name: auth.currentUser.displayName, id: auth.currentUser.uid},\r\n      });\r\n      navigate('/');\r\n };\r\n\r\n \r\n useEffect(() => {\r\n  if(!isAuth){\r\n    navigate(\"/login\");\r\n  }\r\n},[]);\r\n\r\n  return (\r\n    <div className='createPostPage'>\r\n      <div className='cpContainer'>\r\n\r\n        <h1>Create A Post</h1>\r\n        <div className='inputGp'>\r\n        <label> Title : </label>\r\n        <input placeholder='title...' onChange={(event) => {\r\n          setTitle(event.target.value);\r\n        }}  \r\n         />\r\n        </div>\r\n        <div className='inputGp'>\r\n          <label>Post:</label>\r\n          <textarea placeholder='post..' onChange={(event) => {\r\n          setPostText(event.target.value); \r\n        }} />\r\n        </div>\r\n\r\n        <button onClick={createPost}> Submit Post</button>\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default CreatePost;\r\n",[],"C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\pages\\Login.js",[],[],"C:\\Users\\Swapnil\\Desktop\\blog\\blogweb\\src\\firebase-config.js",["37"],[],"// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {getAuth,GoogleAuthProvider} from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore'; \r\n\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAn54Zp9V24Bll3_WQTq6XSdl_ske2HmV0\",\r\n  authDomain: \"blogproject-762c0.firebaseapp.com\",\r\n  projectId: \"blogproject-762c0\",\r\n  storageBucket: \"blogproject-762c0.appspot.com\",\r\n  messagingSenderId: \"760864691393\",\r\n  appId: \"1:760864691393:web:b0e706dd411c31efaab040\",\r\n  measurementId: \"G-JXLNVBT7EV\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\nexport const db = getFirestore(app);\r\nexport const auth = getAuth(app);\r\nexport const provider = new GoogleAuthProvider();\r\n\r\n",{"ruleId":"38","severity":1,"message":"39","line":3,"column":56,"nodeType":"40","messageId":"41","endLine":3,"endColumn":64},{"ruleId":"42","severity":1,"message":"43","line":29,"column":3,"nodeType":"44","endLine":29,"endColumn":5,"suggestions":"45"},{"ruleId":"38","severity":1,"message":"46","line":24,"column":7,"nodeType":"40","messageId":"41","endLine":24,"endColumn":16},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuth' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["47"],"'analytics' is assigned a value but never used.",{"desc":"48","fix":"49"},"Update the dependencies array to be: [isAuth, navigate]",{"range":"50","text":"51"},[731,733],"[isAuth, navigate]"]